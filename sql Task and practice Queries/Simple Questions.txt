#1
SELECT MEMBER_ID, MEMBER_NAME, CITY, MEMBERSHIP_STATUS 
FROM LMS_MEMBERS 
WHERE MEMBERSHIP_STATUS = 'Permanent';


#2
SELECT B.BOOK_CODE, B.PUBLICATION, B.PRICE, S.SUPPLIER_NAME
FROM LMS_BOOK_DETAILS B
JOIN LMS_SUPPLIERS_DETAILS S ON B.SUPPLIER_ID = S.SUPPLIER_ID
WHERE B.BOOK_CODE = (
    SELECT BOOK_CODE 
    FROM LMS_BOOK_ISSUE 
    GROUP BY BOOK_CODE 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
);


#3
SELECT M.MEMBER_ID, M.MEMBER_NAME
FROM LMS_MEMBERS M
JOIN LMS_BOOK_ISSUE BI ON M.MEMBER_ID = BI.MEMBER_ID
WHERE BI.BOOK_CODE = 'BL000002';


#4
SELECT BOOK_CODE, BOOK_TITLE, AUTHOR 
FROM LMS_BOOK_DETAILS 
WHERE AUTHOR LIKE 'P%';


#5
SELECT COUNT(*) AS NO_OF_BOOKS
FROM LMS_BOOK_DETAILS
WHERE CATEGORY = 'JAVA';


#6
SELECT CATEGORY, COUNT(*) AS NO_OF_BOOKS
FROM LMS_BOOK_DETAILS
GROUP BY CATEGORY;


#7
SELECT COUNT(*) AS NO_OF_BOOKS
FROM LMS_BOOK_DETAILS
WHERE PUBLICATION = 'Prentice Hall';


#8
SELECT B.BOOK_CODE, B.BOOK_TITLE 
FROM LMS_BOOK_DETAILS B
JOIN LMS_BOOK_ISSUE BI ON B.BOOK_CODE = BI.BOOK_CODE
WHERE BI.DATE_ISSUE = '2012-04-01';



#9
SELECT MEMBER_ID, MEMBER_NAME, DATE_REGISTER, DATE_EXPIRE
FROM LMS_MEMBERS
WHERE DATE_EXPIRE < '2013-04-01';



#10
SELECT MEMBER_ID, MEMBER_NAME, DATE_REGISTER, MEMBERSHIP_STATUS
FROM LMS_MEMBERS
WHERE DATE_REGISTER < '2012-03-01' AND MEMBERSHIP_STATUS = 'Temporary';



#11
SELECT MEMBER_ID, 
       CONCAT(UPPER(LEFT(MEMBER_NAME, 1)), LOWER(SUBSTRING(MEMBER_NAME, 2))) AS Name
FROM LMS_MEMBERS
WHERE CITY IN ('CHENNAI', 'DELHI');


#12
SELECT DISTINCT CONCAT(BOOK_TITLE, '_is_written_by_', AUTHOR) AS BOOK_WRITTEN_BY
FROM LMS_BOOK_DETAILS;


#13
SELECT AVG(PRICE) AS AVERAGEPRICE
FROM LMS_BOOK_DETAILS
WHERE CATEGORY = 'JAVA';


#14
SELECT SUPPLIER_ID, SUPPLIER_NAME, EMAIL
FROM LMS_SUPPLIERS_DETAILS
WHERE EMAIL LIKE '%@gmail.com';


#15
SELECT SUPPLIER_ID, SUPPLIER_NAME, 
       COALESCE(CAST(CONTACT AS CHAR), EMAIL, ADDRESS) AS CONTACTDETAILS
FROM LMS_SUPPLIERS_DETAILS;


#16
SELECT SUPPLIER_ID, SUPPLIER_NAME, 
       CASE WHEN CONTACT IS NULL THEN 'No' ELSE 'Yes' END AS PHONENUMAVAILABLE
FROM LMS_SUPPLIERS_DETAILS;

#17
SELECT M.MEMBER_ID, M.MEMBER_NAME, M.CITY, M.MEMBERSHIP_STATUS, 
       COALESCE(SUM(F.FINE_AMOUNT), 0) AS Fine
FROM LMS_MEMBERS M
LEFT JOIN LMS_BOOK_ISSUE BI ON M.MEMBER_ID = BI.MEMBER_ID
LEFT JOIN LMS_FINE_DETAILS F ON BI.FINE_RANGE = F.FINE_RANGE
GROUP BY M.MEMBER_ID, M.MEMBER_NAME, M.CITY, M.MEMBERSHIP_STATUS;

